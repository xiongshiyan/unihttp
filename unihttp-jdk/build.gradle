def ARTIFACT_ID = 'unihttp-jdk'
def TYPE = 'jar'
def DESCRIPTION = '使用JDK 的 HttpURLConnection实现的通用HTTP接口'
def gitUrl = 'https://gitee.com/xxssyyyyssxx/unihttp.git'
def siteUrl = 'https://gitee.com/xxssyyyyssxx/unihttp'
def REPO_NAME = 'network'

dependencies{
    compile project(path: ":unihttp-core")
}


install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging TYPE
                name ARTIFACT_ID
                description DESCRIPTION
                url siteUrl
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'xxssyyyyssxx'
                        name 'xiongshiyan'
                        email 'xxssyyyyssxx@126.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

/*signing {
    sign configurations.archives
}*/

tasks.withType(Javadoc) {
    /*options.encoding = 'UTF-8'*/
    options{
        encoding "UTF-8"
        charSet 'UTF-8'
        links "http://docs.oracle.com/javase/7/docs/api"
    }
    options.addStringOption('Xdoclint:none', '-quiet')
}

bintray {
    Properties properties = new Properties()
    boolean isHasFile = false
    if (project.rootProject.file('local.properties') != null){
        isHasFile = true
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
    }
    user = isHasFile ? properties.getProperty("bintray.user") : System.getenv("bintray.user")
    key = isHasFile ? properties.getProperty("bintray.apikey") : System.getenv("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = REPO_NAME
        name = ARTIFACT_ID //项目名称
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}